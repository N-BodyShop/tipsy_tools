uniform vec3 transvec; 
uniform float detmodelview; 
uniform float vecscale;
attribute vec2 delta; 
attribute float type; 
attribute float mass;
attribute float lensc;

#define MAX_PIX_SIZE 2.
#define MIN_PIX_SIZE 0.01

void main() { 
	vec4 DX = vec4(gl_ModelViewMatrix[0][0], gl_ModelViewMatrix[1][0], gl_ModelViewMatrix[2][0],0)/detmodelview;
   	vec4 DY = vec4(gl_ModelViewMatrix[0][1], gl_ModelViewMatrix[1][1], gl_ModelViewMatrix[2][1],0)/detmodelview;
	float sz = vecscale*lensc;
	if(sz*detmodelview>MAX_PIX_SIZE) sz=MAX_PIX_SIZE/detmodelview;
	if(sz*detmodelview<MIN_PIX_SIZE) sz=MIN_PIX_SIZE/detmodelview;
	float afact = 1./(sz*detmodelview);	
	gl_Position=gl_ModelViewProjectionMatrix*(gl_Vertex+delta[0]*DX*sz+delta[1]*DY*sz);
	if(type>3.0) gl_FrontColor = vec4(gl_Color[0],gl_Color[1],gl_Color[2],transvec[2]*mass*afact); 
	else if(type>2.0) gl_FrontColor = vec4(gl_Color[0],gl_Color[1],gl_Color[2],transvec[1]*mass*afact); 
	else gl_FrontColor = vec4(gl_Color[0],gl_Color[1],gl_Color[2],transvec[0]*mass*afact); 
	gl_TexCoord[0][0] = delta[0];
	gl_TexCoord[0][1] = delta[1];

}
